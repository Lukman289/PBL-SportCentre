name: CI/CD Frontend Sport Center

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Install dependencies
        run: npm ci

      - name: Create .env file for CI/CD
        run: |
          cat > .env << EOF
          NEXT_PUBLIC_API_URL=${{ secrets.FRONTEND_API_URL }}
          NEXT_PUBLIC_SOCKET_URL=${{ secrets.FRONTEND_API_URL }}
          EOF

      # - name: Lint
      #   run: npm run lint

      - name: Build project
        run: npm run build

      - name: List all files
        run: find . -type f -not -path "./node_modules/*" -not -path "./.git/*"

      - name: Create artifact directory
        run: |
          mkdir -p artifact
          # Salin semua file dan direktori kecuali node_modules dan .git
          rsync -av --exclude='node_modules' --exclude='.git' ./ artifact/
          echo "Isi artifact:"
          ls -la artifact/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifact
          path: artifact
          if-no-files-found: error

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-artifact
          path: artifact

      - name: List downloaded artifact
        run: ls -la artifact/

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "artifact/*"
          target: "/tmp/frontend-artifact"
          strip_components: 1
          overwrite: true

      - name: Run deployment script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            echo "=== Memulai deployment frontend pada $(date) ==="

            cd /pbl/frontend

            echo "=> Membersihkan folder kecuali .env"
            # Simpan .env jika ada
            if [ -f .env ]; then
              mv .env .env.backup
            fi
            
            # Hapus semua file dan folder (dengan pengecualian untuk file tersembunyi)
            rm -rf *
            
            # Kembalikan .env
            if [ -f .env.backup ]; then
              mv .env.backup .env
            fi

            echo "=> Memeriksa direktori setelah bersih"
            ls -la

            # Mengatur Volta dan PATH jika pakai Volta
            export VOLTA_HOME="$HOME/.volta"
            export PATH="$VOLTA_HOME/bin:$PATH"

            echo "=> Node version: $(node -v)"
            echo "=> NPM version: $(npm -v)"

            echo "=> Memastikan pm2 terinstall"
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            echo "=> Membuat file .env"
            cat > .env << EOF
            NEXT_PUBLIC_API_URL=${{ secrets.FRONTEND_API_URL }}
            NEXT_PUBLIC_SOCKET_URL=${{ secrets.FRONTEND_API_URL }}
            EOF

            echo "=> Menghentikan aplikasi frontend jika berjalan"
            pm2 stop frontend || true

            echo "=> Menyalin file dari artifact"
            cp -r /tmp/frontend-artifact/* .
            
            # Pastikan direktori .next ada dan salin jika tersedia
            if [ -d "/tmp/frontend-artifact/.next" ]; then
              echo "=> Menyalin direktori .next"
              cp -r /tmp/frontend-artifact/.next .
            else
              echo "=> Direktori .next tidak ditemukan di artifact"
            fi

            echo "=> Memeriksa file yang disalin"
            ls -la
            echo "=> Memeriksa direktori src dan components"
            ls -la src/ || echo "Direktori src tidak ada"
            ls -la src/components/ || echo "Direktori components tidak ada"

            echo "=> Install dependencies (termasuk dev dependencies)"
            npm ci

            echo "=> Build aplikasi"
            npm run build

            echo "=> Restart aplikasi dengan PM2"
            pm2 reload frontend --update-env || pm2 start npm --name frontend --  

            echo "=> Status aplikasi:"
            pm2 list

            echo "âœ… Deployment frontend selesai!"
