name: CI/CD Frontend Sport Center

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file for CI/CD
        run: |
          cat > .env << EOF
          NEXT_PUBLIC_API_URL=${{ secrets.FRONTEND_API_URL }}
          NEXT_PUBLIC_SOCKET_URL=${{ secrets.FRONTEND_API_URL }}
          EOF

    #   - name: Lint
    #     run: npm run lint

      - name: Build project
        run: npm run build

      - name: Create artifact directory
        run: |
          mkdir -p artifact
          cp -r .next artifact/
          cp -r public artifact/
          cp package.json package-lock.json next.config.ts artifact/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifact
          path: artifact
          if-no-files-found: error

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-artifact
          path: artifact

      - name: List downloaded artifact
        run: ls -la artifact/

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "artifact/*"
          target: "/pbl/frontend"
          strip_components: 1

      - name: Run deployment script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            echo "=== Memulai deployment frontend pada $(date) ==="

            cd /pbl/frontend
            
            echo "=> Memeriksa direktori"
            ls -la

            # Mengatur Volta dan PATH
            export VOLTA_HOME="$HOME/.volta"
            export PATH="$VOLTA_HOME/bin:$PATH"

            echo "=> Node version: $(node -v)"
            echo "=> NPM version: $(npm -v)"

            echo "=> Menyiapkan dependensi"
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            echo "=> Menghentikan aplikasi frontend lama"
            pm2 stop frontend || true

            echo "=> Membuat file .env"
            cat > .env << EOF
            NEXT_PUBLIC_API_URL=${{ secrets.FRONTEND_API_URL }}
            NEXT_PUBLIC_SOCKET_URL=${{ secrets.FRONTEND_API_URL }}
            EOF

            echo "=> Menginstall dependensi"
            npm install --production

            echo "=> Menjalankan aplikasi dengan PM2"
            pm2 reload frontend --update-env || pm2 start npm --name frontend -- start

            echo "=> Status aplikasi:"
            pm2 list

            echo "âœ… Deployment frontend selesai!" 